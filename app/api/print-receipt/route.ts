import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const { orderNumber, content, order } = await request.json()

    console.log(`üñ®Ô∏è –ü–µ—á–∞—Ç—å —á–µ–∫–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ #${orderNumber}`)

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–∏–Ω—Ç–µ—Ä–æ–º
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ USB –ø—Ä–∏–Ω—Ç–µ—Ä, —Å–µ—Ç–µ–≤–æ–π –ø—Ä–∏–Ω—Ç–µ—Ä –∏–ª–∏ POS-—Ç–µ—Ä–º–∏–Ω–∞–ª

    // –ü—Ä–∏–º–µ—Ä –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤:

    // 1. –î–ª—è USB –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ (—Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ü–û)
    // await sendToUSBPrinter(content)

    // 2. –î–ª—è —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤
    // await sendToNetworkPrinter(content, '192.168.1.100')

    // 3. –î–ª—è POS –ø—Ä–∏–Ω—Ç–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ ESC/POS –∫–æ–º–∞–Ω–¥—ã
    // await sendToPOSPrinter(formatESCPOS(order))

    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
    console.log("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —á–µ–∫–∞:")
    console.log(content)

    return NextResponse.json({
      success: true,
      message: `–ß–µ–∫ –¥–ª—è –∑–∞–∫–∞–∑–∞ #${orderNumber} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–µ—á–∞—Ç—å`,
    })
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —á–µ–∫–∞:", error)
    return NextResponse.json({ success: false, error: "–û—à–∏–±–∫–∞ –ø–µ—á–∞—Ç–∏ —á–µ–∫–∞" }, { status: 500 })
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ ESC/POS –∫–æ–º–∞–Ω–¥—ã
function formatESCPOS(order: any) {
  const ESC = "\x21"
  const commands = [
    ESC + "@", // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–Ω—Ç–µ—Ä–∞
    ESC + "a" + "\x01", // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É
    ESC + "!" + "\x32", // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç
    "BOG'OT PIZZA\n",
    ESC + "!" + "\x00", // –û–±—ã—á–Ω—ã–π —à—Ä–∏—Ñ—Ç
    "================================\n",
    `Buyurtma #${order.orderNumber}\n`,
    `Sana: ${new Date(order.timestamp).toLocaleDateString("uz-UZ")}\n`,
    `Vaqt: ${new Date(order.timestamp).toLocaleTimeString("uz-UZ")}\n`,
    "--------------------------------\n",
    "MAHSULOTLAR:\n",
    "--------------------------------\n",
  ]

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
  order.items.forEach((item: any) => {
    commands.push(`${item.name} x${item.quantity}\n`)
    commands.push(`${(item.price * item.quantity).toLocaleString()} UZS\n`)
  })

  commands.push(
    "--------------------------------\n",
    `Olish: ${order.deliveryMethod === "delivery" ? "Yetkazib berish" : "O'zim olaman"}\n`,
    `To'lov: ${order.paymentMethod === "card" ? "Karta" : "Naxt"}\n`,
    "--------------------------------\n",
    ESC + "!" + "\x18", // –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π —à—Ä–∏—Ñ—Ç –¥–ª—è –∏—Ç–æ–≥–∞
    `JAMI: ${order.totalPrice.toLocaleString()} UZS\n`,
    ESC + "!" + "\x00", // –û–±—ã—á–Ω—ã–π —à—Ä–∏—Ñ—Ç
    "--------------------------------\n",
    "Rahmat! Yaxshi ishtaha!\n",
    "================================\n",
    "\n\n\n", // –û—Ç—Å—Ç—É–ø –¥–ª—è –æ—Ç—Ä—ã–≤–∞
    ESC + "i", // –ß–∞—Å—Ç–∏—á–Ω–∞—è –æ–±—Ä–µ–∑–∫–∞
  )

  return commands.join("")
}